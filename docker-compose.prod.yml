version: '3'

networks:
  laravel:

services:
  nginx:
    build:
      context: ./nginx       # Asumimos que el Dockerfile.nginx y el script de entrada están en la carpeta ./nginx
      dockerfile: Dockerfile.nginx
    container_name: nginx-vemitienda
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # Montamos directorios para almacenar certificados; estos pueden estar vacíos al inicio
      - ./nginx/certs:/etc/ssl/certs
      - ./nginx/private:/etc/ssl/private
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:8.0.30
    container_name: mysql-vemitienda
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: crm-web
      MYSQL_USER: crm-web
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php-vemitienda
    volumes:
      - .:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - laravel
    command: sh -c "composer install && php-fpm"

  npm:
    image: node:20.11.1
    container_name: npm-vemitienda
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artisan-vemitienda
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: queue-vemitienda
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', 'artisan', 'queue:work']
    networks:
      - laravel
