version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - laravel-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: app
    container_name: app
    volumes:
      - .:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    working_dir: /var/www
    depends_on:
      mysql:
        condition: service_healthy
    entrypoint: ["sh", "/var/www/docker-entrypoint.sh"]
    environment:
      - DB_HOST=mysql
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=${APP_DEBUG}
    networks:
      - laravel-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - .:/var/www
      - ./docker/nginx/conf.d/laravel.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "${APP_PORT}:80"
    depends_on:
      - app
    networks:
      - laravel-network

  queue:
    image: app
    container_name: queue
    command: php artisan queue:work --sleep=3 --tries=3
    depends_on:
      - app
      - mysql
    volumes:
      - .:/var/www
    environment:
      - DB_HOST=mysql
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - laravel-network

  scheduler:
    image: app
    container_name: scheduler
    command: bash -c "while true; do php artisan schedule:run; sleep 60; done"
    depends_on:
      - app
      - mysql
    volumes:
      - .:/var/www
    environment:
      - DB_HOST=mysql
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - laravel-network

volumes:
  mysql_data:

networks:
  laravel-network:
    driver: bridge
